@use "sass:map";
@use "sass:list";
@use "sass:string";
@use "sass:color";
@use "src/styles/02-tools/tools.functions" as func;
@use "src/styles/01-settings/settings.colors" as colors;
@use "src/styles/01-settings/settings.pictos" as pictos;

/* Gets a picto from '_settings.pictos.scss' by name, replace colors with default or provided argument */
@mixin get-picto(
  $name,
  $colorHex: colors.$expert-blue,
  $backgroundPosition: center,
  $backgroundSize: contain
) {
  $exists: list.index(pictos.$picto-names, $name);
  @if $exists {
    // Replace main color
    $color-replace: func.str-replace(
      map.get(pictos.$picto-data-uris, $name),
      "{COLOR-HEX-STRING}",
      func.hex-to-url-string($colorHex)
    );

    // SASS color function to make specific lighter version of color
    $lighter-color: color.adjust(
      color.adjust($colorHex, $saturation: -63.23),
      $lightness: 20
    );

    // Replace secondary color
    $lighter-replace: func.str-replace(
      $color-replace,
      "{LIGHTER-HEX-STRING}",
      func.hex-to-url-string($lighter-color)
    );

    background-image: url($lighter-replace);
    background-repeat: no-repeat;
    background-position: $backgroundPosition;
    background-size: $backgroundSize;
  } @else {
    @error "Picto name does not exist";
  }
}

/* $names is an array of names corresponding to pictos you want to include,
 like this ("printer", "comment", "polygon", "edit"). By default it includes the full list. */
@mixin picto-classes(
  $names: pictos.$picto-names,
  $colorHex: colors.$expert-blue,
  $backgroundPosition: center,
  $backgroundSize: contain
) {
  @each $pictoName, $picto in pictos.$picto-data-uris {
    $exists: list.index(pictos.$picto-names, $pictoName);
    @if $exists {
      $is-included: list.index($names, $pictoName);
      @if $is-included {
        &_#{$pictoName} {
          @include get-picto(
            $pictoName,
            $colorHex,
            $backgroundPosition,
            $backgroundSize
          );
        }
      }
    } @else {
      @error "Picto name does not exist";
    }
  }
}
